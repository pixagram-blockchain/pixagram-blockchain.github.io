(self.webpackChunkpixagram_io=self.webpackChunkpixagram_io||[]).push([["vendors-node_modules_buffer-lite_browser_js"],{31546:t=>{const e=new Set(["utf8","utf-8","utf16le","utf-16le","latin1","base64","base64url","hex","ascii","binary","ucs2"]),r=new ArrayBuffer(8),n=new Uint8Array(r),s=new Uint8Array(r,0,4),i=new Uint8Array(r,0,2),o=new Float64Array(r,0,1),u=new Float32Array(r,0,1),f=new TextEncoder,h=new TextDecoder,a={};try{a[8]=BigInt("8"),a[16]=BigInt("16"),a[24]=BigInt("24"),a[32]=BigInt("32"),a[40]=BigInt("40"),a[48]=BigInt("48"),a[56]=BigInt("56"),a[255]=BigInt("255"),a["9223372036854775807"]=BigInt("9223372036854775807"),a["18446744073709551616"]=BigInt("18446744073709551616")}catch(t){}const l=32768,g=function(t){if(t.length<=l)return String.fromCharCode(...t);let e="";for(let r=0;r<t.length;r+=l)e+=String.fromCharCode(...t.slice(r,r+l));return e};class c extends Uint8Array{constructor(...t){"string"==typeof t[0]?(super(c.byteLength(t[0])),c.from(t[0],t[1]).copy(this)):super(...t)}compare(t,e=0,r=t.length,n=0,s=this.length){if(!(t instanceof Uint8Array))throw new TypeError("Comparison target must be a Uint8Array or Buffer");let i=0,o=e;for(let e=n;e<s;e+=1){if(o>=r){i=1;break}const n=this[e],s=t[o];if(n>s){i=1;break}if(n<s){i=-1;break}o+=1}return 0===i&&r-e>s-n&&(i=-1),i}copy(t,e=0,r=0,n=this.length){let s=0===r&&n===this.length?this:this.subarray(r,n);return e+s.length>t.length&&(s=s.subarray(0,s.length-(e+s.length-t.length))),t.set(s,e),s.length}equals(t){if(!(t instanceof Uint8Array))throw new TypeError('The "otherBuffer" argument must be an instance of Buffer or Uint8Array');if(t===this)return!0;if(t.length!==this.length)return!1;if(0===this.length)return!0;if(this.length>=4&&this.byteOffset%4==0&&t.byteOffset%4==0){const e=this.length-this.length%4,r=new Uint32Array(this.buffer,this.byteOffset,e/4),n=new Uint32Array(t.buffer,t.byteOffset,r.length);for(let t=0;t<r.length;t+=1)if(r[t]!==n[t])return!1;for(let r=e;r<this.length;r+=1)if(this[r]!==t[r])return!1}else for(let e=0;e<this.length;e+=1)if(this[e]!==t[e])return!1;return!0}fill(t,e=0,r=this.length,n="utf8"){if("number"==typeof t)super.fill(t,e,r);else{if("string"==typeof t&&(t=c.from(t,n)),!(t instanceof Uint8Array))throw new TypeError("fill value must be a number, string, Buffer, or Uint8Array");t instanceof c||(t=new c(t.buffer,t.byteOffset,t.length));const s=r-e;let i=0;for(let n=e;n<=r-t.length;n+=t.length)i+=t.length,t.copy(this,n);t.copy(this,e+i,0,s-i)}return this}includes(t,e=0,r="utf8"){return-1!==this.indexOf(t,e,r)}indexOf(t,e=0,r="utf8"){if(e<0&&(e=this.length+e),"number"==typeof t)return super.indexOf(t,e);if("string"==typeof t)t=c.from(t,r);else if(!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be one of type number or string or an instance of Buffer or Uint8Array.');for(let r=e;r<=this.length-t.length;r+=1)if(this.subarray(r,r+t.length).equals(t))return r;return-1}lastIndexOf(t,e=this.length,r="utf8"){if(e<0&&(e=this.length+e),"number"==typeof t)return super.lastIndexOf(t,e);if("string"==typeof t)t=c.from(t,r);else if(!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be one of type number or string or an instance of Buffer or Uint8Array.');for(let r=e;r>=0;r-=1)if(this.subarray(r,r+t.length).equals(t))return r;return-1}map(...t){const e=super.map(...t);return new c(e.buffer,e.byteOffset,e.byteLength)}readBigInt64BE(t=0){let e=this.readBigUInt64BE(t);return e>a["9223372036854775807"]&&(e-=a["18446744073709551616"]),e}readBigInt64LE(t=0){let e=this.readBigUInt64LE(t);return e>a["9223372036854775807"]&&(e-=a["18446744073709551616"]),e}readBigUInt64BE(t=0){if(t<0||t+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=BigInt(this[t+7]);return e+=BigInt(this[t+6])<<a[8],e+=BigInt(this[t+5])<<a[16],e+=BigInt(this[t+4])<<a[24],e+=BigInt(this[t+3])<<a[32],e+=BigInt(this[t+2])<<a[40],e+=BigInt(this[t+1])<<a[48],e+=BigInt(this[t])<<a[56],e}readBigUInt64LE(t=0){if(t<0||t+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=BigInt(this[t]);return e+=BigInt(this[t+1])<<a[8],e+=BigInt(this[t+2])<<a[16],e+=BigInt(this[t+3])<<a[24],e+=BigInt(this[t+4])<<a[32],e+=BigInt(this[t+5])<<a[40],e+=BigInt(this[t+6])<<a[48],e+=BigInt(this[t+7])<<a[56],e}readDoubleBE(t=0){if(t<0||t+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");for(let e=0;e<8;e+=1)n[e]=this[e+t];return n.reverse(),o[0]}readDoubleLE(t=0){if(t<0||t+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");for(let e=0;e<8;e+=1)n[e]=this[e+t];return o[0]}readFloatBE(t=0){if(t<0||t+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");for(let e=0;e<4;e+=1)s[e]=this[e+t];return s.reverse(),u[0]}readFloatLE(t=0){if(t<0||t+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");for(let e=0;e<4;e+=1)s[e]=this[e+t];return u[0]}readInt8(t=0){if(t<0||t>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=this[t];return e>127&&(e-=256),e}readInt16BE(t=0){let e=this.readUInt16BE(t);return e>32767&&(e-=65536),e}readInt16LE(t=0){let e=this.readUInt16LE(t);return e>32767&&(e-=65536),e}readInt32BE(t=0){let e=this.readUInt32BE(t);return e>2147483647&&(e-=4294967296),e}readInt32LE(t=0){let e=this.readUInt32LE(t);return e>2147483647&&(e-=4294967296),e}readIntBE(t=0,e){let r=this.readUIntBE(t,e);return r>2**(8*e-1)&&(r-=2**(8*e)),r}readIntLE(t=0,e){let r=this.readUIntLE(t,e);return r>2**(8*e-1)&&(r-=2**(8*e)),r}readUInt8(t=0){if(t<0||t>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[t]}readUInt16BE(t=0){if(t<0||t+1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=this[t+1];return e+=this[t]<<8,e}readUInt16LE(t=0){if(t<0||t+1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=this[t];return e+=this[t+1]<<8,e}readUInt32BE(t=0){if(t<0||t+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=this[t+3];return e+=this[t+2]<<8,e+=this[t+1]<<16,e+=16777216*this[t],e}readUInt32LE(t=0){if(t<0||t+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let e=this[t];return e+=this[t+1]<<8,e+=this[t+2]<<16,e+=16777216*this[t+3],e}readUIntBE(t,e){if("number"!=typeof e)throw new TypeError('"byteLength" must be a number');if(t<0||t+e-1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let r=1,n=0;for(let s=e-1;s>=0;s-=1)n+=this[t+s]*r,r*=256;return n}readUIntLE(t,e){if("number"!=typeof e)throw new TypeError('"byteLength" must be a number');if(t<0||t+e-1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let r=1,n=0;for(let s=0;s<e;s+=1)n+=this[t+s]*r,r*=256;return n}subarray(t=0,e=this.length){const r=super.subarray(t,e);return new c(r.buffer,r.byteOffset,r.byteLength)}slice(t=0,e=this.length){return this.subarray(t,e)}swap16(){if(this.length%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<this.length;t+=2)i[0]=this[t],this[t]=this[t+1],this[t+1]=i[0];return this}swap32(){if(this.length%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<this.length;t+=4)s[0]=this[t],s[1]=this[t+1],s[2]=this[t+2],s[3]=this[t+3],this[t]=s[3],this[t+1]=s[2],this[t+2]=s[1],this[t+3]=s[0];return this}swap64(){if(this.length%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<this.length;t+=8){for(let e=0;e<8;e+=1)n[e]=this[t+e];n.reverse();for(let e=0;e<8;e+=1)this[t+e]=n[e]}return this}toJSON(){return{data:[...this],type:"Buffer"}}toString(t="utf8",e=0,r=this.length){const n=this.subarray(e,r);switch(t.toLowerCase()){case"utf8":case"utf-8":return h.decode(n);case"utf16le":case"utf-16le":case"ucs2":return g(new Uint16Array(n.buffer,n.byteOffset,n.byteLength/2));case"latin1":case"binary":return g(n);case"ascii":return g(n.map((t=>127&t)));case"base64":return btoa(g(n));case"base64url":{const t=btoa(g(n));let e=t.length;for(;e>1&&"="===t[e-1];)e-=1;return t.substring(0,e).replace(/\+/g,"-").replace(/\//g,"_")}case"hex":{let t="";for(let e=0;e<n.length;e+=1){const r=n[e];r<16&&(t+="0"),t+=r.toString(16)}return t}default:throw new Error("Unknown encoding: "+t)}}write(t,e=0,r=this.length-e,n="utf8"){if("string"!=typeof t)throw new TypeError("argument must be a string");const s=c.from(t,n);return s.copy(this,e,0,r),s.length<r?s.length:r}writeBigInt64BE(t,e=0){return t<0&&(t=a["18446744073709551616"]+t),this.writeBigUInt64BE(t,e)}writeBigInt64LE(t,e=0){return t<0&&(t=a["18446744073709551616"]+t),this.writeBigUInt64LE(t,e)}writeBigUInt64BE(t,e=0){if(e<0||e+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e+7]=Number(t&a[255]),this[e+6]=Number(t>>a[8]&a[255]),this[e+5]=Number(t>>a[16]&a[255]),this[e+4]=Number(t>>a[24]&a[255]),this[e+3]=Number(t>>a[32]&a[255]),this[e+2]=Number(t>>a[40]&a[255]),this[e+1]=Number(t>>a[48]&a[255]),this[e]=Number(t>>a[56]&a[255]),e+8}writeBigUInt64LE(t,e=0){if(e<0||e+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e]=Number(t&a[255]),this[e+1]=Number(t>>a[8]&a[255]),this[e+2]=Number(t>>a[16]&a[255]),this[e+3]=Number(t>>a[24]&a[255]),this[e+4]=Number(t>>a[32]&a[255]),this[e+5]=Number(t>>a[40]&a[255]),this[e+6]=Number(t>>a[48]&a[255]),this[e+7]=Number(t>>a[56]&a[255]),e+8}writeDoubleBE(t,e=0){if(e<0||e+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");o[0]=t,n.reverse();for(let t=0;t<8;t+=1)this[e+t]=n[t];return e+8}writeDoubleLE(t,e=0){if(e<0||e+7>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");o[0]=t;for(let t=0;t<8;t+=1)this[e+t]=n[t];return e+8}writeFloatBE(t,e=0){if(e<0||e+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");u[0]=t,s.reverse();for(let t=0;t<4;t+=1)this[e+t]=s[t];return e+4}writeFloatLE(t,e=0){if(e<0||e+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");u[0]=t;for(let t=0;t<4;t+=1)this[e+t]=s[t];return e+4}writeInt8(t,e=0){if(e<0||e>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return t<0&&(t=256+t),this[e]=t,e+1}writeInt16BE(t,e=0){return t<0&&(t=65536+t),this.writeUInt16BE(t,e),e+2}writeInt16LE(t,e=0){return t<0&&(t=65536+t),this.writeUInt16LE(t,e),e+2}writeInt32BE(t,e=0){return t<0&&(t=4294967296+t),this.writeUInt32BE(t,e),e+4}writeInt32LE(t,e=0){return t<0&&(t=4294967296+t),this.writeUInt32LE(t,e),e+4}writeIntBE(t,e,r){return t<0&&(t=2**(8*r)+t),this.writeUIntBE(t,e,r)}writeIntLE(t,e,r){return t<0&&(t=2**(8*r)+t),this.writeUIntLE(t,e,r)}writeUInt8(t,e=0){if(e<0||e>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e]=t,e+1}writeUInt16BE(t,e=0){if(e<0||e+1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e+1]=255&t,this[e]=t>>8&255,e+2}writeUInt16LE(t,e=0){if(e<0||e+1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e]=255&t,this[e+1]=t>>8&255,e+2}writeUInt32BE(t,e=0){if(e<0||e+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e+3]=255&t,this[e+2]=t>>8&255,this[e+1]=t>>16&255,this[e]=t>>24&255,e+4}writeUInt32LE(t,e=0){if(e<0||e+3>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");return this[e]=255&t,this[e+1]=t>>8&255,this[e+2]=t>>16&255,this[e+3]=t>>24&255,e+4}writeUIntBE(t,e,r){if("number"!=typeof r)throw new TypeError('"byteLength" must be a number');if("number"!=typeof e)throw new TypeError('"offset" must be a number');if(e<0||e+r-1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let n=256**r;for(let s=0;s<r;s+=1)n/=256,this[e+s]=255&Math.floor(t/n);return e+r}writeUIntLE(t,e,r){if("number"!=typeof r)throw new TypeError('"byteLength" must be a number');if("number"!=typeof e)throw new TypeError('"offset" must be a number');if(e<0||e+r-1>=this.length)throw new RangeError("Attempt to access memory outside buffer bounds");let n=1;for(let s=0;s<r;s+=1)this[e+s]=255&Math.floor(t/n),n*=256;return e+r}}const b=function(t,e,r){return 0!==e&&t.fill(e,0,t.length,r),t};let w=new c(8192),m=0;c.alloc=function(t,e=0,r="utf8"){if("number"!=typeof t)throw new TypeError("size argument must be a number");if(0===t)return new c(0);if(t>=c.poolSize/2)return b(new c(t),e,r);m+t>c.poolSize&&(w=new c(c.poolSize),m=0);const n=w.subarray(m,m+t);return m+=t,m%8!=0&&(m+=8-m%8),b(n,e,r)},c.allocUnsafe=c.alloc,c.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("size argument must be a number");return new c(t)};c.byteLength=function(t,e="utf8"){if("string"!=typeof t)return t.length;switch(e){case"utf8":case"utf-8":return function(t){let e=0;for(let r=0;r<t.length;r+=1){const n=t.codePointAt(r);n<=127?e+=1:n<=2047?e+=2:n<=65535?e+=3:(r+=1,e+=4)}return e}(t);case"latin1":case"binary":case"ascii":return t.length;case"utf16le":case"utf-16le":case"ucs2":return 2*t.length;case"base64":case"base64url":return function(t){let e=t.length;for(;e>1&&"="===t[e-1];)e-=1;return Math.floor(.75*e)}(t);case"hex":return t.length/2;default:throw new Error("Unknown encoding: "+e)}},c.compare=function(t,e){if(!(t instanceof Uint8Array))throw new TypeError("buf1 must be a Buffer or Uint8Array");return c.isBuffer(t)?t.compare(e):c.prototype.compare.call(t,e)},c.concat=function(t,e){if(!Array.isArray(t))throw new TypeError("list argument must be an Array");if(void 0===e){e=0;for(let r=0;r<t.length;r+=1)e+=t[r].length}let r=0;const n=c.alloc(e);for(let e=0;e<t.length;e+=1){const s=t[e];if(!(s instanceof Uint8Array))throw new TypeError('"list['+e+']" must be an instance of Buffer or Uint8Array');n.set(s,r),r+=s.length}return n};const y="The first argument must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object";c.from=function(t,e,r){if("object"==typeof t){if("number"==typeof t.length&&"function"==typeof t[Symbol.iterator])return new c(t);if(t instanceof ArrayBuffer)return new c(t,e,r);if("Buffer"!==t.type||!Array.isArray(t.data))throw new TypeError(y);return new c(t.data)}if("string"==typeof t)switch("string"!=typeof e&&(e="utf8"),e.toLowerCase()){case"utf8":case"utf-8":return new c(f.encode(t));case"utf16le":case"utf-16le":case"ucs2":return new c(new Uint16Array([...t].map((t=>t.charCodeAt(0)))).buffer);case"latin1":case"binary":case"ascii":return new c([...t].map((t=>t.charCodeAt(0))));case"base64":case"base64url":return new c([...atob(t.replace(/-/g,"+").replace(/_/g,"/"))].map((t=>t.charCodeAt(0))));case"hex":{const e=new c(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=parseInt(t.substring(r,r+2),16);return e}default:throw new Error("Unknown encoding: "+e)}throw new TypeError(y)},c.copyBytesFrom=function(t,e=0,r=t.length-e){const n=t instanceof Uint8Array||t instanceof Int8Array||t instanceof Uint8ClampedArray?1:t instanceof Int16Array||t instanceof Uint16Array?2:t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array?4:t instanceof Float64Array||"undefined"!=typeof BigInt64Array&&t instanceof BigInt64Array||"undefined"!=typeof BigInt64Array&&t instanceof BigUint64Array?8:1,s=new Uint8Array(t.buffer,t.byteOffset+e*n,r*n);return c.from(s)},c.isBuffer=function(t){return t instanceof c},c.isEncoding=function(t){return"string"==typeof t&&e.has(t.toLowerCase())},c.poolSize=8192,t.exports={Buffer:c,SlowBuffer:function(t){return c.alloc(t)},INSPECT_MAX_BYTES:0,kMaxLength:2147483647}}}]);